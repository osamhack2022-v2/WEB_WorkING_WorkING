name: Backend Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    environment: Production

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-be-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: |
          yarn
          npm i -g pm2

      - name: 📝 Generate Prisma Typescript d.ts
        run: yarn generate

      - name: 👷 Build Typescript
        run: yarn build:types

      - name: 🛠️ Setting up deploy env variables
        run: node ../.github/workflows-files/get-dotenv-from-base64.js ./.env
        env:
          ENV_BASE64: ${{ secrets.BE_ENV_BASE64 }}
      
      - name: 🔒 Setting up deploy key
        run: node ../.github/workflows-files/setup-key-from-base64.js
        env:
          KEY_BASE64: ${{ secrets.DEPLOY_KEY_BASE64 }}
          KEY_PATH: ~/.ssh/id_rsa

      - name: 🚧 Deploying to production
        run: pm2 deploy production --force > /dev/null
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_TARGET }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_KEY_PATH: ~/.ssh/id_rsa
          DEPLOY_BYPASS_KEY_CHECK: true
          DEPLOY_SUPPRESS_SSH_LOG: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

